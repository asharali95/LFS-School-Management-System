@model LFS_School_Management_System.Models.Student

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>

    var Added = ({ IsSuccess }) => {
        if (IsSuccess) {
            $(function () {
                $("#success").fadeIn('fast').delay('5000').fadeOut('slow')
            })
        }
        else {
            Failed(IsSuccess)
        }
    }
    var Failed = (IsSuccess) => {
        $(function () {
            $("#failed").fadeIn('fast').delay('5000').fadeOut('slow')
        })
    }

</script>
<h2>Student Form</h2>

@using (Ajax.BeginForm("AddStudent", "Students", new AjaxOptions
{
    HttpMethod = "POST",
    OnSuccess = "Added",
    OnFailure = "Failure"
}))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Fill out the following student information</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div id="failed" class="alert alert-danger" style="display:none; box-sizing:border-box; padding:10px; font-size: 18px">
        There was an error while adding the Student Data
    </div>
    <div id="success" class="success alert-success" style="display: none; box-sizing: border-box; padding: 10px; font-size: 18px">
        Student added successfully!
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EnrollmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EnrollmentDate, new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
            @Html.ValidationMessageFor(model => model.EnrollmentDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
